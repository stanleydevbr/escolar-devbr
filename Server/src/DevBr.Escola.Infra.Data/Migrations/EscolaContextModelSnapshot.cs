// <auto-generated />
using System;
using DevBr.Escola.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

#nullable disable

namespace DevBr.Escola.Infra.Data.Migrations
{
    [DbContext(typeof(EscolaContext))]
    partial class EscolaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Alunos.Aluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"), 1L, 1);

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("DateTime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("EnderecoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EscolaOrigem")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Identidade")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid?>("MatriculaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("NomeDaMae")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("NomeDoPai")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("SobreNome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid?>("TurmaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("MatriculaId");

                    b.HasIndex("TurmaId");

                    b.ToTable("Alunos", (string)null);
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Alunos.Doenca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"), 1L, 1);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("FichaMedicaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Observacao")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("FichaMedicaId");

                    b.ToTable("Doencas", (string)null);
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Alunos.FichaMedica", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"), 1L, 1);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DateTime");

                    b.Property<Guid>("HospitalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MedicoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observacao")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TipoSanguineo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId")
                        .IsUnique();

                    b.HasIndex("HospitalId");

                    b.HasIndex("MedicoId");

                    b.ToTable("FichasMedicas", (string)null);
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Alunos.Hospital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"), 1L, 1);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("EnderecoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Hospitais", (string)null);
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Alunos.Medicacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"), 1L, 1);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("FichaMedicaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observacao")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("FichaMedicaId");

                    b.ToTable("Medicacoes", (string)null);
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Alunos.Medico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"), 1L, 1);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DateTime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Especialidade")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Medicos", (string)null);
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.ComplexTypes.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CascadeMode")
                        .HasColumnType("int");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioAlteracao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCriacao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Cursos.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AlunoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"), 1L, 1);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DateTime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("Cursos", (string)null);
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Cursos.Disciplina", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"), 1L, 1);

                    b.Property<Guid?>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DateTime");

                    b.Property<decimal?>("Media")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("Disciplinas", (string)null);
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Empresas.Empresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Celular")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"), 1L, 1);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DateTime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("EnderecoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Empresas", (string)null);
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Empresas.Recurso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"), 1L, 1);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DateTime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observacao")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<Guid?>("SalaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("ValorUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("SalaId");

                    b.ToTable("Recursos", (string)null);
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Empresas.Sala", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"), 1L, 1);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DateTime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Salas", (string)null);
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Funcionarios.Atividade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"), 1L, 1);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DateTime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Frequencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FuncionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Atividades", (string)null);
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Funcionarios.Cargo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cbo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"), 1L, 1);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DateTime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Cargos", (string)null);
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Funcionarios.Funcionario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CargoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"), 1L, 1);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("DateTime");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Identidade")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal>("Salario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SobreNome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<Guid?>("TurmaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.HasIndex("TurmaId");

                    b.ToTable("Funcionarios", (string)null);
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Matriculas.Matricula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"), 1L, 1);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DateTime");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Matriculas", (string)null);
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Matriculas.Periodo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnoLetivo")
                        .HasColumnType("int");

                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"), 1L, 1);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("InicioAnoLetivo")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("InicioMatricula")
                        .HasColumnType("DateTime");

                    b.Property<Guid?>("MatriculaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TerminoAnoLetivo")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("TerminoMatricula")
                        .HasColumnType("DateTime");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("MatriculaId");

                    b.ToTable("Periodos", (string)null);
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Matriculas.Turma", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Codigo"), 1L, 1);

                    b.Property<Guid?>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DateTime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<Guid?>("PeriodoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SalaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Turno")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("PeriodoId");

                    b.HasIndex("SalaId");

                    b.ToTable("Turmas", (string)null);
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Alunos.Aluno", b =>
                {
                    b.HasOne("DevBr.Escola.Dominio.Entidades.ComplexTypes.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .IsRequired();

                    b.HasOne("DevBr.Escola.Dominio.Entidades.Matriculas.Matricula", "Matricula")
                        .WithMany()
                        .HasForeignKey("MatriculaId");

                    b.HasOne("DevBr.Escola.Dominio.Entidades.Matriculas.Turma", null)
                        .WithMany("Alunos")
                        .HasForeignKey("TurmaId");

                    b.Navigation("Endereco");

                    b.Navigation("Matricula");
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Alunos.Doenca", b =>
                {
                    b.HasOne("DevBr.Escola.Dominio.Entidades.Alunos.FichaMedica", null)
                        .WithMany("Doencas")
                        .HasForeignKey("FichaMedicaId");
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Alunos.FichaMedica", b =>
                {
                    b.HasOne("DevBr.Escola.Dominio.Entidades.Alunos.Aluno", "Aluno")
                        .WithOne("FichaMedica")
                        .HasForeignKey("DevBr.Escola.Dominio.Entidades.Alunos.FichaMedica", "AlunoId")
                        .IsRequired();

                    b.HasOne("DevBr.Escola.Dominio.Entidades.Alunos.Hospital", "Hospital")
                        .WithMany()
                        .HasForeignKey("HospitalId")
                        .IsRequired();

                    b.HasOne("DevBr.Escola.Dominio.Entidades.Alunos.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoId")
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Hospital");

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Alunos.Hospital", b =>
                {
                    b.HasOne("DevBr.Escola.Dominio.Entidades.ComplexTypes.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Alunos.Medicacao", b =>
                {
                    b.HasOne("DevBr.Escola.Dominio.Entidades.Alunos.FichaMedica", null)
                        .WithMany("Medicacoes")
                        .HasForeignKey("FichaMedicaId");
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Cursos.Curso", b =>
                {
                    b.HasOne("DevBr.Escola.Dominio.Entidades.Alunos.Aluno", null)
                        .WithMany("Cursos")
                        .HasForeignKey("AlunoId");
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Cursos.Disciplina", b =>
                {
                    b.HasOne("DevBr.Escola.Dominio.Entidades.Cursos.Curso", null)
                        .WithMany("Disciplinas")
                        .HasForeignKey("CursoId");
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Empresas.Empresa", b =>
                {
                    b.HasOne("DevBr.Escola.Dominio.Entidades.ComplexTypes.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Empresas.Recurso", b =>
                {
                    b.HasOne("DevBr.Escola.Dominio.Entidades.Empresas.Sala", null)
                        .WithMany("Recursos")
                        .HasForeignKey("SalaId");
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Empresas.Sala", b =>
                {
                    b.HasOne("DevBr.Escola.Dominio.Entidades.Empresas.Empresa", null)
                        .WithMany("Salas")
                        .HasForeignKey("EmpresaId");
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Funcionarios.Atividade", b =>
                {
                    b.HasOne("DevBr.Escola.Dominio.Entidades.Funcionarios.Funcionario", null)
                        .WithMany("Atividades")
                        .HasForeignKey("FuncionarioId");
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Funcionarios.Funcionario", b =>
                {
                    b.HasOne("DevBr.Escola.Dominio.Entidades.Funcionarios.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId");

                    b.HasOne("DevBr.Escola.Dominio.Entidades.Matriculas.Turma", null)
                        .WithMany("Professores")
                        .HasForeignKey("TurmaId");

                    b.Navigation("Cargo");
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Matriculas.Periodo", b =>
                {
                    b.HasOne("DevBr.Escola.Dominio.Entidades.Matriculas.Matricula", null)
                        .WithMany("Periodos")
                        .HasForeignKey("MatriculaId");
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Matriculas.Turma", b =>
                {
                    b.HasOne("DevBr.Escola.Dominio.Entidades.Cursos.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId");

                    b.HasOne("DevBr.Escola.Dominio.Entidades.Matriculas.Periodo", null)
                        .WithMany("Turmas")
                        .HasForeignKey("PeriodoId");

                    b.HasOne("DevBr.Escola.Dominio.Entidades.Empresas.Sala", "Sala")
                        .WithMany()
                        .HasForeignKey("SalaId");

                    b.Navigation("Curso");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Alunos.Aluno", b =>
                {
                    b.Navigation("Cursos");

                    b.Navigation("FichaMedica");
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Alunos.FichaMedica", b =>
                {
                    b.Navigation("Doencas");

                    b.Navigation("Medicacoes");
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Cursos.Curso", b =>
                {
                    b.Navigation("Disciplinas");
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Empresas.Empresa", b =>
                {
                    b.Navigation("Salas");
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Empresas.Sala", b =>
                {
                    b.Navigation("Recursos");
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Funcionarios.Funcionario", b =>
                {
                    b.Navigation("Atividades");
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Matriculas.Matricula", b =>
                {
                    b.Navigation("Periodos");
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Matriculas.Periodo", b =>
                {
                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("DevBr.Escola.Dominio.Entidades.Matriculas.Turma", b =>
                {
                    b.Navigation("Alunos");

                    b.Navigation("Professores");
                });
#pragma warning restore 612, 618
        }
    }
}
